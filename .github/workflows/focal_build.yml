name: Focal-Build

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 5 * * 6'
  workflow_dispatch:

jobs:
  industrial_ci:
    name: Foxy
    runs-on: ubuntu-20.04
    env:
      CI_NAME: Focal-Build
      OS_NAME: ubuntu
      OS_CODE_NAME: focal
      ROS_DISTRO: foxy
      ROS_REPO: main
      BEFORE_INIT: './.add-gazebo-ppa'
      UPSTREAM_WORKSPACE: 'dependencies_unstable.repos'
      ROSDEP_SKIP_KEYS: "catkin taskflow fcl gz-common5 gz-math7 gz-rendering7"
      ADDITIONAL_DEBS: "libgz-common5-dev libgz-math7-dev libgz-rendering7-dev"
      DOCKER_IMAGE: "ros:foxy"
      PARALLEL_TESTS: false
      NOT_TEST_BUILD: true
      BEFORE_RUN_TARGET_TEST_EMBED: "source /root/target_ws/install/local_setup.bash"
      CCACHE_DIR: "/home/runner/work/tesseract_ros2/tesseract_ros2/Focal-Build/.ccache"
      UPSTREAM_CMAKE_ARGS: "-DCMAKE_BUILD_TYPE=Release"
      TARGET_CMAKE_ARGS: "-DCMAKE_BUILD_TYPE=Debug"
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      PUSH_DOCKER_IMAGE: ${{ github.ref == 'refs/heads/master' || github.event_name == 'release' }}
    steps:
      - uses: actions/checkout@v1

      - name: Free Disk Space
        continue-on-error: true
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h

      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")

      - name: ccache cache files
        continue-on-error: true
        uses: actions/cache@v1.1.0
        with:
          path: ${{ env.CI_NAME }}/.ccache
          key: ${{ env.CI_NAME }}-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
          restore-keys: |
            ${{ env.CI_NAME }}-ccache-

      - name: Login to Github container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker meta-information
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
            prefix=
            suffix=
          tags: |
            type=ref,event=branch,prefix=${{ ROS_DISTRO }}-
            type=semver,pattern={{major}}.{{minor}},prefix=${{ ROS_DISTRO }}-

      - name: Set build type
        run: |
          if [[ "${{ env.PUSH_DOCKER_IMAGE }}" = true ]]
          then
            echo "BUILD_TYPE=Release" >> $GITHUB_ENV
          else
            echo "BUILD_TYPE=Debug" >> $GITHUB_ENV
          fi

      - uses: 'ros-industrial/industrial_ci@master'
        env: ${{env}}

      - name: Push post-build Docker
        if: ${{ env.PUSH_DOCKER_IMAGE == 'true' }}
        run: docker push ${{ steps.meta.outputs.tags }}
